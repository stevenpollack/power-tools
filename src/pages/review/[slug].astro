---
import { render, getCollection } from "astro:content";
import Layout from "../../layouts/ReviewLayout.astro";
import { getEntry } from "astro:content";
import { Picture } from "astro:assets";
import { ShareButtons } from "@/components/ShareButtons";
import { RelatedReviews } from "@/components/RelatedReviews";
import type { AuthorData, ToolData, Review, ReviewWithData } from "@/lib/types";

export async function getStaticPaths() {
  const reviews = await getCollection("reviews");
  return reviews.map((review) => ({
    params: { slug: review.data.slug },
    props: { review },
  }));
}

const { review }: { review: Review } = Astro.props;
const { Content } = await render(review);

const author: AuthorData = (await getEntry(review.data.author)).data;
const tool: ToolData = (await getEntry(review.data.tool)).data;
const { mood, tone, readingTime } = review.data;

// Fetch related reviews
const allReviews = await getCollection("reviews");
const relatedReviewsRaw = allReviews
  .filter(
    (r) =>
      r.data.slug !== review.data.slug &&
      (r.data.author.id === review.data.author.id ||
        r.data.tool.id === review.data.tool.id),
  )
  .slice(0, 10);

const relatedReviews: ReviewWithData[] = await Promise.all(
  relatedReviewsRaw.map(async (r) => ({
    review: r,
    author: await getEntry(r.data.author),
    tool: await getEntry(r.data.tool),
  })),
);
---

<Layout title="Review - Power Tools Reviews">
  <main class="review-detail">
    <div class="container">
      <article class="review-article">
        <header class="review-header">
          <div class="review-meta">
            <div class="author-tool-info">
              <a href={`/author/${author.slug}`} class="author-link">
                <Picture
                  src={author.portrait.filename}
                  alt={author.name}
                  width={40}
                  height={40}
                  layout="constrained"
                  class="rounded-full"
                />
                <span>{author.name}</span>
              </a>
              <span class="separator">reviews</span>
              <a href={`/tool/${tool.slug}`} class="tool-link">
                <Picture
                  src={tool.thumbnailUrl}
                  alt={tool.name}
                  width={40}
                  height={40}
                  class="rounded-lg"
                />
                <span>{tool.name}</span>
              </a>
            </div>

            <div class="review-details">
              <span class="reading-time">{readingTime} min read</span>
              <span class="mood-tag">{mood}</span>
              <span class="tone-tag">{tone}</span>
            </div>
          </div>
        </header>

        <div class="review-content">
          <Content />
        </div>

        <footer class="review-footer">
          <div class="share-section">
            <h3>Share This Review</h3>
            <ShareButtons
              client:load
              toolName={tool.name}
              authorName={author.name}
            />
          </div>

          <div class="related-section">
            <h3>Continue Reading...</h3>
            <RelatedReviews client:load reviews={relatedReviews} />
          </div>
        </footer>
      </article>
    </div>
  </main>
</Layout>

<style>
  .review-detail {
    padding: 2rem 0;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .review-article {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  .review-header {
    padding: 2rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .author-tool-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .author-link,
  .tool-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: white;
    text-decoration: none;
    font-weight: 500;
  }

  .author-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
  }

  .tool-icon {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
  }

  .separator {
    opacity: 0.8;
    font-style: italic;
  }

  .review-details {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .reading-time,
  .mood-tag,
  .tone-tag {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .review-content {
    padding: 3rem 2rem;
  }

  .review-content h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    color: var(--color-primary);
    font-family: var(--font-serif);
    line-height: 1.2;
  }

  .review-text {
    font-size: 1.125rem;
    line-height: 1.8;
    color: var(--color-text);
    font-family: var(--font-serif);
  }

  .review-text p {
    margin-bottom: 1.5rem;
  }

  .review-footer {
    padding: 2rem;
    background: #f9fafb;
    border-top: 1px solid #e5e7eb;
  }

  .share-section,
  .related-section {
    margin-bottom: 2rem;
  }

  .share-section h3,
  .related-section h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: var(--color-primary);
  }

  .placeholder {
    color: var(--color-text-light);
    font-style: italic;
    text-align: center;
    padding: 1rem;
  }

  .review-content :global(p) {
    margin-bottom: 1.5rem;
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }

    .review-header {
      padding: 1.5rem;
    }

    .review-content {
      padding: 2rem 1.5rem;
    }

    .review-content h1 {
      font-size: 2rem;
    }

    .review-text {
      font-size: 1rem;
    }

    .author-tool-info {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>
