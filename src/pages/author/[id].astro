---
import Layout from "@/layouts/ReviewLayout.astro";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const authors = await getCollection("authors");
  return authors.map((author) => ({
    params: { id: author.id },
    props: { author },
  }));
}

const { author } = Astro.props;

const reviews = await getCollection("reviews", (review) =>
  review.data.author.id === author.id
);
const tools = await Promise.all(
  reviews.map((review) => getEntry(review.data.tool))
);
---

<Layout title="Author Profile - Power Tools Reviews">
  <main class="author-profile">
    <div class="container">
      <div class="author-header">
        <div class="author-image">
          <Image src={author.data.portrait.filename} alt={author.data.name} class="mask-radial-at-center mask-radial-from-100%" />
        </div>

        <div class="author-info">
          <h1>{author.data.name}</h1>
          <p class="author-details">
            {author.data.nationality} -- {author.data.lifespan}
          </p>
          <h2 class="font-semibold pb-1">Primary Works</h2>
          <span class="italic">
            {author.data.primaryWorks.join(", ")}
          </span>
          <h2 class="font-semibold pb-1">Style Keywords</h2>
          <span class="italic">
            {author.data.styleKeywords.join(", ")}
          </span>
          <h2 class="font-semibold pb-1">Literary Movement</h2>
          <span class="italic">
            {author.data.literaryMovement}
          </span>
        </div>
      </div>

      <section class="author-reviews">
        <h2>Reviews by This Author</h2>
        <div class="reviews-grid">
          {reviews.map((review) => (
            <ul>
              <li>
                <a href={`/review/${review.id}`}>
                  <h3>{tools.find((tool) => tool.id === review.data.tool.id)?.data.name}</h3>
                  <p>{review.data.mood}</p>
                </a>
              </li>
            </ul>
          ))}
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .author-profile {
    padding: 2rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .author-header {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 2rem;
    margin-bottom: 3rem;
    align-items: start;
  }

  .author-image {
    width: 200px;
    height: 200px;
  }

  .placeholder-image {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    text-align: center;
  }

  .author-info h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--color-primary);
  }

  .author-details {
    font-size: 1.125rem;
    color: var(--color-text-light);
    margin-bottom: 1rem;
  }

  .author-bio {
    line-height: 1.8;
    color: var(--color-text);
  }

  .author-reviews {
    border-top: 2px solid #f3f4f6;
    padding-top: 2rem;
  }

  .author-reviews h2 {
    font-size: 2rem;
    margin-bottom: 2rem;
    color: var(--color-primary);
  }

  .reviews-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .placeholder {
    grid-column: 1 / -1;
    text-align: center;
    color: var(--color-text-light);
    font-style: italic;
    padding: 2rem;
  }

  @media (max-width: 768px) {
    .author-header {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .author-image {
      width: 150px;
      height: 150px;
      margin: 0 auto;
    }

    .author-info h1 {
      font-size: 2rem;
    }
  }
</style>
