---
import Layout from "@/layouts/Layout-v2.astro";
import { getEntry, getCollection } from "astro:content";
import { Picture } from "astro:assets";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const authors = await getCollection("authors");
  return authors.map((author) => ({
    params: { id: author.data.slug },
    props: { author },
  }));
}

interface Props {
  author: CollectionEntry<"authors">;
}

const { author } = Astro.props;

// Get reviews for this author from V2 collection
const reviews = await getCollection(
  "reviewsV2",
  (review) => review.data.author.id === author.id,
);

// Get full author and tool data for each review
const reviewsWithData = await Promise.all(
  reviews.map(async (review) => ({
    review,
    tool: await getEntry(review.data.tool),
    author: await getEntry(review.data.author),
  })),
);
---

<Layout title={`${author.data.name} - Tool Review Expert`}>
  <main class="mx-auto max-w-7xl px-4 py-8">
    <!-- Mobile: Stacked Layout, Desktop: 2-Column Layout -->
    <div class="grid grid-cols-1 gap-8 lg:grid-cols-[400px_1fr]">
      <!-- Left Column: Author Profile -->
      <div
        class="bg-bunnings-neutral-light-gray text-bunnings-secondary-green h-fit rounded-lg p-8 shadow-sm"
      >
        <div class="text-center">
          <Picture
            src={author.data.headshot}
            alt={author.data.name}
            class="mx-auto mb-6 h-[300px] w-[300px] rounded-lg bg-amber-100 object-cover"
            widths={[300, 600]}
            sizes="300px"
            formats={["avif", "webp"]}
            loading="lazy"
          />
          <h1 class="mb-2 text-2xl font-bold">{author.data.name}</h1>
          <p class="text-bunnings-neutral-charcoal mb-6 text-sm">
            {author.data.lifespan}
          </p>

          <div class="text-left">
            <h2 class="mb-4 text-xl font-semibold">About</h2>
            {
              author.data.bio ? (
                <p class="">{author.data.bio}</p>
              ) : (
                <p class="text-bunnings-neutral-medium-gray italic">
                  Bio coming soon...
                </p>
              )
            }
          </div>
        </div>
      </div>

      <!-- Right Column: Reviews -->
      <div class="space-y-8">
        {
          reviewsWithData.length > 0 ? (
            <div>
              <div class="mb-6 flex items-center justify-between">
                <h2 class="text-bunnings-neutral-charcoal text-xl font-semibold">
                  Reviews ({reviewsWithData.length})
                </h2>
                <select
                  id="brand-sort"
                  class="border-bunnings-neutral-medium-gray focus:ring-bunnings-secondary-green focus:border-bunnings-secondary-green rounded-md border px-3 py-2 text-sm focus:ring-2"
                >
                  <option value="brand-asc">Sort by Brand A-Z</option>
                  <option value="brand-desc">Sort by Brand Z-A</option>
                </select>
              </div>

              <div
                id="reviews-grid"
                class="grid grid-cols-1 gap-6 xl:grid-cols-2"
              >
                {reviewsWithData.map(
                  ({ review, tool, author: reviewAuthor }) => (
                    <div
                      class="review-card border-bunnings-neutral-medium-gray flex h-full flex-col rounded-lg border p-4 transition-shadow hover:shadow-md"
                      data-brand={tool.data.brand.toLowerCase()}
                    >
                      <div class="mb-3 flex items-start gap-3">
                        <Picture
                          src={tool.data.thumbnailUrl}
                          alt={tool.data.name}
                          class="h-15 w-15 flex-shrink-0 rounded object-cover"
                          widths={[60]}
                          formats={["avif", "webp"]}
                          loading="lazy"
                        />
                        <div class="min-w-0 flex-1">
                          <h3 class="text-bunnings-neutral-charcoal mb-1 line-clamp-2 text-sm font-medium">
                            {tool.data.name}
                          </h3>
                          <p class="text-bunnings-neutral-medium-gray mb-1 text-xs">
                            {tool.data.brand}
                          </p>
                          {review.data.rating && (
                            <div class="flex items-center gap-1">
                              <div class="text-bunnings-primary-orange flex text-sm">
                                {"★".repeat(review.data.rating)}
                                {"☆".repeat(5 - review.data.rating)}
                              </div>
                              <span class="text-bunnings-neutral-medium-gray text-xs">
                                {review.data.rating}/5
                              </span>
                            </div>
                          )}
                        </div>
                      </div>

                      <div class="mb-4 flex-grow">
                        <p class="text-bunnings-neutral-charcoal line-clamp-3 text-sm">
                          {review.data.excerpt}
                        </p>
                      </div>

                      <div class="text-bunnings-neutral-medium-gray border-bunnings-neutral-light-gray flex items-center justify-between border-t pt-3 text-xs">
                        <span>
                          {new Date(
                            review.data.dateCreated,
                          ).toLocaleDateString()}
                        </span>
                        <a
                          href={`/tool/v2/${tool.id}?review=${review.data.slug}`}
                          class="text-bunnings-secondary-green hover:text-bunnings-primary-orange transition-colors"
                        >
                          Read More →
                        </a>
                      </div>
                    </div>
                  ),
                )}
              </div>
            </div>
          ) : (
            <div class="border-bunnings-neutral-medium-gray rounded-lg border bg-white p-8 text-center shadow-sm">
              <p class="text-bunnings-neutral-medium-gray mb-2 text-lg">
                No reviews yet
              </p>
              <p class="text-bunnings-neutral-medium-gray text-sm">
                {author.data.name} hasn't reviewed any tools yet.
              </p>
            </div>
          )
        }
      </div>
    </div>
  </main>
</Layout>

<script>
  // Brand sorting functionality
  document.addEventListener("DOMContentLoaded", () => {
    const sortSelect = document.getElementById(
      "brand-sort",
    ) as HTMLSelectElement;
    const reviewsGrid = document.getElementById("reviews-grid") as HTMLElement;
    const reviewCards = Array.from(
      document.querySelectorAll(".review-card"),
    ) as HTMLElement[];

    const sortReviews = (order: "brand-asc" | "brand-desc") => {
      const sorted = [...reviewCards].sort((a, b) => {
        const brandA = a.dataset.brand || "";
        const brandB = b.dataset.brand || "";

        if (order === "brand-asc") {
          return brandA.localeCompare(brandB);
        } else {
          return brandB.localeCompare(brandA);
        }
      });

      // Clear grid and re-append sorted cards
      reviewsGrid.innerHTML = "";
      sorted.forEach((card) => reviewsGrid.appendChild(card));
    };

    if (sortSelect) {
      sortSelect.addEventListener("change", (e) => {
        const target = e.target as HTMLSelectElement;
        sortReviews(target.value as "brand-asc" | "brand-desc");
      });
    }
  });
</script>

<style>
  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
