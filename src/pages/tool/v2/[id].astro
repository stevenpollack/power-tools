---
import Layout from "@/layouts/ReviewLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { Picture } from "astro:assets";
import type { ReviewWithData, Tool } from "@/lib/types";
import { ExternalLink } from "lucide-react";
import { ReviewsSection } from "@/components/reviews/reviews-section";

export async function getStaticPaths() {
  const tools = await getCollection("tools");

  return tools.map((tool) => ({
    params: { id: tool.id },
    props: { tool },
  }));
}

const { tool }: { tool: Tool } = Astro.props;

// Get reviews for this tool
const reviews = (await getCollection("reviews")).filter(
  (review) => review.data.tool.id === tool.id,
);

// Get author data for each review
const reviewsWithData: ReviewWithData[] = await Promise.all(
  reviews.map(async (review) => ({
    review,
    author: await getEntry(review.data.author),
    tool,
  })),
);

// Calculate review statistics
const totalReviews = reviewsWithData.length;
const averageRating =
  totalReviews > 0
    ? reviewsWithData.reduce((sum, r) => sum + (r.review.data.rating || 0), 0) /
      totalReviews
    : 0;

const ratingDistribution = reviewsWithData.reduce(
  (dist, r) => {
    const rating = r.review.data.rating || 3;
    dist[rating as keyof typeof dist] =
      (dist[rating as keyof typeof dist] || 0) + 1;
    return dist;
  },
  { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 },
);

const averageQualityRating =
  totalReviews > 0
    ? reviewsWithData.reduce(
        (sum, r) => sum + (r.review.data.qualityRating || 0),
        0,
      ) / totalReviews
    : 0;

const averageValueRating =
  totalReviews > 0
    ? reviewsWithData.reduce(
        (sum, r) => sum + (r.review.data.valueRating || 0),
        0,
      ) / totalReviews
    : 0;

// Transform reviews for the component
const transformedReviews = reviewsWithData.slice(0, 6).map((r) => ({
  rating: r.review.data.rating || 3,
  recommendsProduct: r.review.data.recommendsProduct || true,
  helpfulVotes: r.review.data.helpfulVotes || 0,
  unhelpfulVotes: r.review.data.unhelpfulVotes || 0,
  verifiedPurchaser: r.review.data.verifiedPurchaser || true,
  displayName:
    r.review.data.displayName ||
    r.author.data.displayName ||
    r.author.data.name,
  useCase: r.review.data.useCase || "General use",
  userCategory: r.review.data.userCategory || "DIY Enthusiast",
  content: r.review.data.excerpt || "Great tool!",
  dateCreated: r.review.data.dateCreated,
  qualityRating: r.review.data.qualityRating || 4,
  valueRating: r.review.data.valueRating || 4,
}));

const { name, brand, specifications, pricing } = tool.data;
---

<Layout title={`${name} - Reviews`}>
  <main class="min-h-screen bg-white">
    <!-- Tool Header Section -->
    <div class="border-border border-b bg-white py-4 sm:py-6">
      <div class="container mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-4 lg:grid-cols-2 lg:gap-8">
          <div class="flex justify-center lg:justify-start">
            <Picture
              src={tool.data.thumbnailUrl}
              alt={name}
              class="border-border h-64 w-64 rounded-lg border object-cover sm:h-80 sm:w-80 lg:h-96 lg:w-96"
              widths={[300, 600]}
              sizes="(max-width: 768px) 250px, 300px"
            />
          </div>

          <div
            class="flex flex-col items-center text-center lg:items-start lg:text-left"
          >
            <h1
              class="font-bunnings-heading mb-1 text-[24px] leading-tight font-bold text-[rgb(13,82,87)] lg:text-[30px]"
            >
              {name}
            </h1>
            <p class="mb-3 text-[16px] font-medium text-[rgb(102,102,102)]">
              {brand}
            </p>

            <div class="mb-3 flex flex-col items-center gap-1 lg:items-start">
              <span
                class="text-[1.25rem] font-bold text-[rgb(13,82,87)] lg:text-[1.5rem]"
                >${pricing.currentPrice}</span
              >
              {
                pricing.onSale && pricing.msrp && (
                  <span class="text-[16px] text-[rgb(51,51,51)] line-through">
                    ${pricing.msrp}
                  </span>
                )
              }
            </div>

            {
              tool.data.bunningsUrl && (
                <div class="mt-3">
                  <a
                    href={tool.data.bunningsUrl}
                    class="inline-flex items-center rounded-md bg-[rgb(255,171,0)] px-6 py-3 font-medium text-white no-underline transition-colors hover:bg-[rgba(255,171,0,0.9)]"
                    target="_blank"
                  >
                    <span class="flex items-center gap-2">
                      View on Bunnings.com.au
                      <ExternalLink className="h-4 w-4" />
                    </span>
                  </a>
                </div>
              )
            }
          </div>
        </div>
      </div>
    </div>

    <!-- Bunnings-style Accordion Sections -->
    <div class="bg-white py-6">
      <div class="container mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="w-full max-w-full">
          <div class="join join-vertical bg-white">
            <!-- Features Accordion -->
            <div
              class="collapse-arrow join-item border-bunnings-neutral-charcoal collapse rounded-none border-b-1"
            >
              <input type="radio" name="tool-accordion" />
              <div
                class="collapse-title text-bunnings-primary-green relative pl-6 text-xl font-extrabold before:absolute before:top-2 before:bottom-2 before:left-0 before:w-1 before:bg-[rgb(218,41,28)] lg:text-2xl"
                style="color:rgb(13,82,87)"
              >
                Features
              </div>
              <div class="collapse-content p-0">
                <!-- Features content -->
                <div class="bg-white p-4">
                  <p class="mb-4 text-sm leading-relaxed text-gray-600">
                    Key features and capabilities of this tool.
                  </p>
                  <ul class="m-0 flex list-none flex-col gap-3 p-0">
                    {
                      specifications.keyFeatures.map((feature, index) => (
                        <li class="flex items-start gap-3">
                          <svg
                            class="text-bunnings-primary-green mt-0.5 h-4 w-4 flex-shrink-0"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              d="M5 13l4 4L19 7"
                            />
                          </svg>
                          <span class="text-sm leading-relaxed text-gray-700">
                            {feature}
                          </span>
                        </li>
                      ))
                    }
                  </ul>
                </div>
              </div>
            </div>
            <!-- Ratings & Reviews Accordion -->
            <div class="collapse-arrow join-item collapse rounded-none">
              <input type="radio" name="tool-accordion" checked />
              <div
                class="collapse-title relative pl-6 text-xl font-extrabold before:absolute before:top-2 before:bottom-2 before:left-0 before:w-1 before:bg-[rgb(218,41,28)] lg:text-2xl"
                style="color:rgb(13,82,87)"
              >
                Ratings & Reviews
              </div>
              <div class="collapse-content p-0">
                <!-- Ratings & Reviews content -->
                <!-- TODO: Ratings & Reviews section refactor for visual parity -->
                <ReviewsSection
                  reviews={transformedReviews}
                  totalReviews={39}
                  averageRating={3.9}
                  ratingDistribution={ratingDistribution}
                  averageQualityRating={3.6}
                  averageValueRating={4.0}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>
