---
interface Props {
  specifications: {
    power: string;
    weight: string;
    dimensions: string;
    batteryLife?: string | undefined;
    cordless: boolean;
    keyFeatures?: string[];
  };
  className?: string;
}

const { specifications, className } = Astro.props;
---

<div class={`specs-container ${className || ""}`}>
  <dl class="specs-list">
    <dt class="spec-label">Power</dt>
    <dd class="spec-value">{specifications.power}</dd>

    <dt class="spec-label">Weight</dt>
    <dd class="spec-value">{specifications.weight}</dd>

    <dt class="spec-label">Dimensions</dt>
    <dd class="spec-value">{specifications.dimensions}</dd>

    {
      specifications.batteryLife && (
        <>
          <dt class="spec-label">Battery Life</dt>
          <dd class="spec-value">{specifications.batteryLife}</dd>
        </>
      )
    }

    <dt class="spec-label">Type</dt>
    <dd class="spec-value">
      {specifications.cordless ? "Cordless" : "Corded"}
    </dd>
  </dl>
</div>

<style>
  .specs-container {
    margin-bottom: 1rem;
  }

  .specs-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: 0.75rem;
  }

  .spec-label {
    font-size: 14px;
    font-weight: 500;
    color: rgb(51, 51, 51);
    margin-top: 1rem;
  }

  .spec-label:first-child {
    margin-top: 0;
  }

  .spec-value {
    font-size: 16px;
    color: rgb(51, 51, 51);
    margin-top: 0.25rem;
  }

  /* Desktop: side-by-side layout */
  @media (min-width: 640px) {
    .specs-list {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem 1rem;
    }

    .spec-label {
      margin-top: 0;
    }
  }
</style>
